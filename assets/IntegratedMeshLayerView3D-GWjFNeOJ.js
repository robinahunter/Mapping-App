import{a1 as n,P as p,a2 as m,e as i,y as o,a3 as l,c as d}from"./index-s2l4PLwR.js";import{E as c}from"./I3SMeshView3D-NyUAdzXy.js";import{n as u}from"./LayerView3D-WlgN_g5F.js";import{u as h}from"./LayerView-izbCbf8E.js";import"./I3SOverrides-DGbBg_tw.js";import"./I3SNode-L2YC5sdC.js";import"./I3SUtil-d2egQgMW.js";import"./I3SBinaryReader-S8w2PFaP.js";import"./ReactiveSet-9iuGF9JN.js";import"./meshFeatureSet-5oitFUKA.js";import"./External-eSKH5aDi.js";import"./FeatureLayerView3D-YK3uAg8p.js";import"./FeatureLayerViewBase3D-5ZQCSGT7.js";import"./HeatmapDensity.glsl--rt6sNqE.js";import"./dehydratedFeatureComparison-LLLiMRvM.js";import"./queryForSymbologySnapping-CRl-hoa3.js";import"./elevationInfoUtils-YqWBgm3Z.js";import"./hash-SS5GKVPY.js";import"./Graphics3DObjectStates-Yu-5WusE.js";import"./optimizedFeatureQueryEngineAdapter-uC1Kz8tq.js";import"./PooledRBush-GEs5EtOq.js";import"./quickselect-vB0PhTYW.js";import"./popupUtils-71O42VEN.js";import"./floorFilterUtils-zOdaZIyV.js";import"./QueryEngine-5PbUAW30.js";import"./WhereClause-_wDYf1-p.js";import"./TimeOnly-1xnbWxcK.js";import"./json-v6EOeNTY.js";import"./QueryEngineCapabilities-PzVpW5yD.js";import"./utils-HH0VezPv.js";import"./utils-VQX9Y5Zu.js";import"./generateRendererUtils-U7-fmTv6.js";import"./FeatureStore-4-vnLmGd.js";import"./BoundsStore-6nraijeM.js";import"./projectExtentUtils-PolQKRiF.js";import"./query-P7KU3Ld7.js";import"./pbfQueryUtils-e7Ljr5zD.js";import"./pbf-qBe8r_2i.js";import"./EventedSet-s03J7qN6.js";import"./RefreshableLayerView-6IDOw-vf.js";import"./SceneModification-6ikTKAce.js";import"./persistable-U4XUE3xH.js";import"./multiOriginJSONSupportUtils-R5XHSAtL.js";import"./resourceExtension-Fh9glJZB.js";import"./SceneLayerWorker-tPP1sI7v.js";const g=.2;let r=class extends c(u(h)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,e,a,s;return((s=(a=(e=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:e.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new m;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([o()],r.prototype,"layer",void 0),i([o()],r.prototype,"i3slayer",null),i([o(l)],r.prototype,"updatingProgress",void 0),i([o()],r.prototype,"updatingProgressValue",null),i([o()],r.prototype,"lodFactor",null),i([o({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([d("esri.views.3d.layers.SceneLayerView3D")],r);const pt=r;export{pt as default};
