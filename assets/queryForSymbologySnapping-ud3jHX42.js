import{g4 as P,cD as x,g5 as q,g6 as E,O as z,g7 as G,g8 as A,g9 as B,ga as H,g0 as J}from"./index-cUgUnEUb.js";import{u as N}from"./elevationInfoUtils-epT1yhSD.js";async function k(a,d,l,p,s){const{elevationProvider:u,renderCoordsHelper:i}=a,{elevationInfo:g}=d,{pointsInFeatures:R,spatialReference:h}=p,y=x.fromJSON(h),m=q(g,!0),I=await E(m,y,s);z(s);const c=[],e=new Set,t=new Set;f.spatialReference=y;const o=a.elevationProvider.spatialReference??a.spatialReference;for(const{objectId:n,points:r}of R){const w=l(n);if(w==null){for(const S of r)c.push(S.z??0);e.add(n);continue}w.isDraped&&t.add(n);const O=w.graphic.geometry;b.setFromElevationInfo(N(O,g)),b.updateFeatureExpressionInfoContext(I,w.graphic,d);for(const{x:S,y:C,z:F}of r)f.x=S,f.y=C,f.z=F??0,await G(f,D,o,0,{signal:s}),A(D,u,b,i,v),c.push(v.z)}return{elevations:c,drapedObjectIds:t,failedObjectIds:e}}const b=new B,f=P(0,0,0,x.WGS84),v=new H,D=[0,0,0];async function K(a,d,l){if(a==null||d.candidates.length===0)return j;const p=a.graphics3DGraphicsByObjectID??a.graphics3DGraphics,s=[],u=[],{renderer:i}=a,g=i!=null&&"arcadeRequired"in i&&i.arcadeRequired?J():null,R=async(e,{graphic:t,graphics3DSymbol:o})=>{const n=await g,r=await a.getRenderingInfoAsync(t,i,n,{signal:l});return r==null?[]:o.queryForSnapping(e,y,r,l)},{candidates:h,spatialReference:y}=d;for(let e=0;e<h.length;++e){const t=h[e],{objectId:o}=t,n=typeof o=="number"?p==null?void 0:p.get(o):void 0;if(n==null)continue;const{graphics3DSymbol:r}=n;r.symbologySnappingSupported&&(s.push(R(t,n)),u.push(e))}if(s.length===0)return j;const m=await Promise.all(s);z(l);const I=[],c=[];for(let e=0;e<m.length;++e){const t=m[e],o=u[e];for(const n of t)I.push(n),c.push(o)}return{candidates:I,sourceCandidateIndices:c}}const j={candidates:[],sourceCandidateIndices:[]};export{k as c,K as r};
