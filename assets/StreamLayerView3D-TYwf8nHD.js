import{e as r,y as o,c as p,bo as O,g as R,u as _,dP as U,Z as g,a2 as k,cM as T,W as $,n as C,au as x}from"./index-DI6e8Bth.js";import{o as E}from"./StreamFeatureManager-dw0Qhu8Y.js";import{createConnection as G}from"./createConnection-94fpyGCK.js";import{r as j}from"./EventedSet-Y-p_DA8l.js";import{E as V}from"./HeatmapDensity.glsl-AayfZpMO.js";import{n as L}from"./LayerView3D-wIikxqpC.js";import{u as F}from"./LayerView-ktosBE9Q.js";import"./query-dd_qK1k4.js";import"./pbfQueryUtils-ifQg1IXR.js";import"./pbf-KfMO_yXx.js";import"./dehydratedFeatureComparison-EKNpxTwz.js";import"./queryForSymbologySnapping-rOtk1_B5.js";import"./elevationInfoUtils-jlPEydhQ.js";import"./hash-SS5GKVPY.js";import"./Graphics3DObjectStates-tDrKf7w9.js";import"./optimizedFeatureQueryEngineAdapter-hYlRICSk.js";import"./PooledRBush-laTontsr.js";import"./quickselect-kIQYotpE.js";import"./popupUtils-PJpPMb_9.js";import"./floorFilterUtils-zOdaZIyV.js";import"./QueryEngine-_Qz-yoWd.js";import"./WhereClause-1q5Urswb.js";import"./TimeOnly-z7E7hAiH.js";import"./json-v6EOeNTY.js";import"./QueryEngineCapabilities-PzVpW5yD.js";import"./utils-78AsXDAI.js";import"./utils-gm4DUdQ7.js";import"./generateRendererUtils-MujG3Bw2.js";import"./FeatureStore-RBSKsaoJ.js";import"./BoundsStore-QUCh2193.js";import"./projectExtentUtils-yWV-LHzd.js";const N=2500;let d=class extends k{getObjectId(){return this.objectId}};r([o({type:Number,json:{read:!0}})],d.prototype,"objectId",void 0),d=r([p("esri.layers.graphics.controllers.StreamGraphic")],d);let z=class{constructor(e){this.onUpdate=e,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(e){this._idToGraphic.set(e.objectId,e)}get(e){return this._idToGraphic.get(e)}forEach(e){this._idToGraphic.forEach(e)}removeById(e){const t=this._idToGraphic.get(e);return t?(t.sourceLayer=t.layer=null,this._idToGraphic.delete(e),t):null}update(e,t){this.onUpdate(e,t)}get size(){return this._idToGraphic.size}},n=class extends O(R){constructor(){super(...arguments),this.isPaused=!1,this.graphics=new j,this._updateInfo={websocket:0,client:0},this._updateIntervalId=null,this._outSpatialReference=null}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId!==null&&(clearInterval(this._updateIntervalId),this._updateIntervalId=null)}clear(){this._clearInterval(),this.connection=_(this.connection),this.store=_(this.store),this.graphics.clear(),this.removeAllHandles()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_startup(){const{layer:e,layerView:t}=this,{spatialReference:l,definitionExpression:c,geometryDefinition:h,objectIdField:u,timeInfo:f,purgeOptions:v,maxReconnectionAttempts:I,maxReconnectionInterval:S,customParameters:w}=e,b=e.geometryType?U.toJSON(e.geometryType):null,P=l,m=t.view.spatialReference,M={geometry:h,where:c};this.clear(),this._set("connection",G(e.parsedUrl,P,m,b,M,I,S,w??void 0)),this._outSpatialReference=m.toJSON(),this.store=new z(this._onUpdate.bind(this)),this.featuresManager=new E(this.store,u,f.toJSON(),v);const y="startup-watches";this.removeHandles(y),this.addHandles([e.on("send-message-to-socket",a=>this.connection.sendMessageToSocket(a)),e.on("send-message-to-client",a=>this.connection.sendMessageToClient(a)),this.connection.on("data-received",a=>this._onFeature(a)),this.connection.on("message-received",a=>this._onWebSocketMessage(a)),g(()=>[e.definitionExpression,e.geometryDefinition,e.purgeOptions],()=>this._startup())],y),this.isPaused||this._initUpdateInterval()}_onWebSocketMessage(e){if(this.layerView.emit("message-received",e),"type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this.featuresManager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this.featuresManager.removeByTrackId(t);break;case"clear":this.store.forEach(t=>this.featuresManager.removeById(t.objectId))}}_onFeature(e){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry});try{e.geometry==null||e.geometry.spatialReference||(e.geometry.spatialReference=this._outSpatialReference);const t=d.fromJSON(e);t.sourceLayer=t.layer=this.layer,this.featuresManager.add(t)}catch{}}_onUpdate(e,t){t!=null&&this.graphics.removeMany(t),e!=null&&(this._updateInfo.client+=e.length,this.graphics.addMany(e))}_initUpdateInterval(){this._clearInterval();const{updateInterval:e}=this.layer;let t=performance.now();this._updateIntervalId=setInterval(()=>{const l=performance.now(),c=l-t;if(c>N){t=l;const h=Math.round(this._updateInfo.client/(c/1e3)),u=Math.round(this._updateInfo.websocket/(c/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:h,websocket:u})}this.featuresManager.checkForUpdates()},e)}pauseStream(){this.isPaused=!0,this._clearInterval()}resumeStream(){this.isPaused=!1,this._initUpdateInterval()}};r([o()],n.prototype,"isPaused",void 0),r([o({constructOnly:!0})],n.prototype,"layer",void 0),r([o({constructOnly:!0})],n.prototype,"layerView",void 0),r([o()],n.prototype,"connection",void 0),r([o({readOnly:!0})],n.prototype,"updating",null),n=r([p("esri.layers.graphics.controllers.StreamController")],n);const B=s=>{let e=class extends s{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}constructor(...t){super(...t),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return this._isUserPaused?"paused":this._streamConnectionStatus}_onSuspendedChange(t){t?this._doPause():this._isUserPaused||this._doResume()}};return r([o()],e.prototype,"_isUserPaused",void 0),r([o({readOnly:!0})],e.prototype,"connectionStatus",null),r([o({type:T})],e.prototype,"filter",void 0),e=r([p("esri.layers.mixins.StreamLayerView")],e),e};let i=class extends B(V(L(F))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=$.ASYNC,this.hasZ=!0,this.hasM=!1}initialize(){this.addHandles(g(()=>this.suspended,s=>{this.controller&&this._onSuspendedChange(s)}))}get connectionError(){var e,t;const s=(t=(e=this.controller)==null?void 0:e.connection)==null?void 0:t.errorString;return s?new C("stream-controller",s):null}createQuery(){return new x({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(s,e){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(s),e==null?void 0:e.signal)}get _streamConnectionStatus(){var s,e;return((e=(s=this.controller)==null?void 0:s.connection)==null?void 0:e.connectionStatus)??"disconnected"}createController(){return new n({layer:this.layer,layerView:this})}beforeSetController(){}_doPause(){var s;(s=this.controller)==null||s.pauseStream()}_doResume(){var s;(s=this.controller)==null||s.resumeStream()}};r([o({readOnly:!0})],i.prototype,"updatePolicy",void 0),r([o({readOnly:!0})],i.prototype,"connectionError",null),r([o()],i.prototype,"controller",void 0),r([o({readOnly:!0})],i.prototype,"hasZ",void 0),r([o({readOnly:!0})],i.prototype,"hasM",void 0),r([o({readOnly:!0})],i.prototype,"_streamConnectionStatus",null),i=r([p("esri.views.3d.layers.StreamLayerView3D")],i);const we=i;export{we as default};
